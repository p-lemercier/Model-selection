---
title: "Spline in a Cox regression model"
---

# Exemple in breast cancer

```{r}
#| message: false
#| warning: false

library(dplyr)
library(ggplot2)
library(survival)
library(survminer)
library(rms)
library(emmeans)

# see https://cran.r-project.org/web/packages/survival/vignettes/splines.pdf
```

# The Rotterdam dataset

```{r}
str(gbsg)
```

# Kaplan-Meier curve

```{r}
ggsurvplot(survfit(Surv(rfstime, status) ~ 1, data=gbsg),
           pval = FALSE, conf.int = TRUE,
           xscale = 365.25,
           break.time.by = 365.25,
           ylab = "Year since ",
           risk.table = "abs_pct",  # absolute number and percentage at risk.
           risk.table.y.text = FALSE, # show bars instead of names in text annotations
           surv.median.line = "none", # Specify median survival
           ggtheme = theme_bw())
```


## Modelise age as continous variable

```{r}
mcox <- coxph(Surv(rfstime, status) ~ meno + age, data=gbsg)

# Summarize the model
summary(mcox, scale=365.25)
```

### Residuals

```{r}
# survminer::ggcoxdiagnostics(mcox, type = "martingale")

martResb <- residuals(mcox, process = "Event")

ggplot(gbsg, aes(x=age, y=martResb)) +
  geom_point(alpha = 0.2) +
  stat_smooth(method = "loess", formula = y ~ x, alpha = 0.17) + 
  geom_hline(yintercept=0, color = "red") + 
  annotate("rect", xmin = quantile(gbsg$age,0.025),
           xmax = quantile(gbsg$age,0.975),
           ymin = -Inf, ymax = Inf, alpha = 0.2, fill = "#99CCCC") +
  labs(x = "Age",
       y = "Martingale residuals") + 
  theme_bw()
```

## Splines

```{r}
mcox_spl <- coxph(Surv(rfstime, status) ~ meno + rcs(age), data=gbsg)

anova(mcox, mcox_spl, test = "LRT")
```

The model with splines tends to fit better

```{r}
AIC(mcox, mcox_spl)
```

```{r}
anova(mcox_spl)
```

```{r}
summary(mcox_spl, scale=365.25)
```

ðŸ˜­

## Compare predictions

We predict survival probability at 3-years according to age

```{r}
age_range <- seq(24, 90, by = 1)
t <- 3

mcox_pred <- summary(survfit(mcox, newdata = data.frame(age = age_range, meno = 1)), 
                     times = t*365.25, scale=365.25)

mcox_spl_pred <- summary(survfit(mcox_spl, newdata = data.frame(age = age_range, meno = 1)), 
                     times = t*365.25, scale=365.25)

mcox_pred_all <- bind_cols(age = rep(age_range, 2),
                           Model = rep(c("Cox", "Cox_spline"), each = length(age_range)),
                           Time = t,
                           Surv_Prob = c(mcox_pred$surv, mcox_spl_pred$surv), 
                           Lower = c(mcox_pred$lower, mcox_spl_pred$lower), 
                           Upper = c(mcox_pred$upper, mcox_spl_pred$upper))


ggplot(mcox_pred_all, aes(x = age, y = Surv_Prob)) +
  geom_line(aes(color = Model), linewidth = 1) +
  geom_ribbon(aes(ymin=Lower, ymax=Upper, fill = Model), alpha=.2) +
  scale_discrete_manual(c("color", "fill"),
                        values=c("Cox" = "cyan4", "Cox_spline" = "goldenrod2")) +
  labs(x = "Age", y = "Survival at 3 years", color = "", fill = "") +
  theme_bw() +
  theme(legend.title = element_text(size = 15, face = 'bold'),
        legend.text = element_text(size = 15),
        text = element_text(size=15), legend.position="bottom")
```

```{r}
# #### Visualization
# library(ggeffects)
# ggpredict(mcox_spl, terms = "age", type = "survival") %>%
#   plot()
```

## Contrast

We estimate the HR compare to age 45.

```{r}
ref <- 45

mcox_spl_emm <- emmeans(mcox_spl, ~ age, at = list(age = age_range), type = "response")

mcox_spl_ctrs <- emmeans::contrast(mcox_spl_emm, "trt.vs.ctrl", ref = paste0("age", ref), 
                                   infer = T,  adjust = "none")
  
mcox_spl_ctrs %>%
  as.data.frame() %>%
  bind_cols("age" = age_range[age_range != ref]) %>% 
  ggplot(., aes(x=age, y=ratio)) +
  geom_line() +
  geom_ribbon(aes(ymin=asymp.LCL, ymax=asymp.UCL), alpha=0.15, linetype=0) +
  geom_hline(yintercept=1, color = "red") +
  labs(x = "age", y = "Hazard ratio") +
  theme_bw() +
  theme(legend.title = element_text(size = 15, face = 'bold'),
        legend.text = element_text(size = 15),
        text = element_text(size=15),legend.position="bottom")
```
